<?php

namespace App\HttpController\Publics;

use App\Base\BaseController;
use EasySwoole\Utility\SnowFlake;
use Qiniu\Auth;
use Qiniu\Config;
use Qiniu\Storage\BucketManager;

/**
 * Created by PhpStorm.
 * User: dudley
 * Date: 18-9-30
 * Time: 下午1:51
 */
class QiniuUpload extends BaseController
{

    public function onRequest($action): ?bool
    {
        return parent::onRequest($action); // TODO: Change the autogenerated stub

    }

    public $rules_get_upload_token = [
    ];


    /**
     * 取得七牛云上传token
     * @throws
     */
    public function getUploadToken()
    {
        $config = getConfig('QINIU_UPLOAD');
        $accessKey =  $config['ACCESS_KEY']?? '';
        $secretKey =  $config['SECRET_KEY']?? '';

        $bucket = $config['BUCKET']?? '';

        // 初始化签权对象
        $auth = new Auth($accessKey, $secretKey);

        $str = SnowFlake::make();
        $fileKey = $str;

        $policy = new \stdClass();
        $policy->insertOnly = 1;

        //生成上传token
        $token = $auth->uploadToken($bucket, $fileKey, 3600, $policy);

        $this->apiSuccess(['token' => $token, 'key' => strval($fileKey)]);
    }


    public $rules_delete_file = [
        'file_key|文件Key' => 'require|alphaDash|max:64',
    ];

    /**
     * 删除图片
     * @throws
     */
    public function deleteFile()
    {
        $fileKey = $this->getParam("file_key");

        $config = getConfig('QINIU_UPLOAD');
        $accessKey =  $config['ACCESS_KEY']?? '';
        $secretKey =  $config['SECRET_KEY']?? '';
        $bucket = $config['BUCKET']?? '';

        $auth = new Auth($accessKey, $secretKey);
        $config = new Config();
        $manager = new BucketManager($auth, $config);
        $result = $manager->delete($bucket, $fileKey);

        if(empty($result)) {
            $this->apiSuccess();
        } else{
            $this->apiFail('操作失败:' . $result->message());
        }
    }
}